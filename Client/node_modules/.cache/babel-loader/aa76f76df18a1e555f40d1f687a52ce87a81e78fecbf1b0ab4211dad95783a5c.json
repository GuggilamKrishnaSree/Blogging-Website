{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krish\\\\OneDrive\\\\Desktop\\\\Blogging Website\\\\client\\\\blog\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  async function register(event) {\n    event.preventDefault();\n    // const response = \n    try {\n      await fetch('http://localhost:4000/register', {\n        method: 'Post',\n        body: JSON.stringify({\n          username,\n          password\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    } catch (e) {\n      alert(\"Registration failed\");\n    }\n    // if(response.status === 200)\n    // {\n    //     alert('Registration successful');\n    // }  \n    // else{\n    // alert('Registration failed'); \n    // }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"register\",\n    onSubmit: register,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      value: username,\n      onChange: event => setUsername(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      value: password,\n      onChange: event => setPassword(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(RegisterPage, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","RegisterPage","_s","username","setUsername","password","setPassword","register","event","preventDefault","fetch","method","body","JSON","stringify","headers","e","alert","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/krish/OneDrive/Desktop/Blogging Website/client/blog/src/pages/RegisterPage.js"],"sourcesContent":["import {useState} from \"react\";\r\n\r\nexport default function RegisterPage(){\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    async function register(event){\r\n        event.preventDefault();\r\n        // const response = \r\n        try{\r\n        await fetch('http://localhost:4000/register',{\r\n            method: 'Post',\r\n            body: JSON.stringify({username,password}),\r\n            headers: {'Content-Type':'application/json'},\r\n    });\r\n}\r\ncatch(e){\r\n    alert(\"Registration failed\");\r\n}\r\n        // if(response.status === 200)\r\n        // {\r\n        //     alert('Registration successful');\r\n        // }  \r\n        // else{\r\n        // alert('Registration failed'); \r\n        // }\r\n    }\r\n    return(\r\n        <form className=\"register\" onSubmit={register}>\r\n            <h1>Register</h1>\r\n            <input type=\"text\" placeholder=\"username\" \r\n            value={username}\r\n            onChange={event => setUsername(event.target.value)}/>\r\n            \r\n            <input type=\"password\" placeholder=\"password\"\r\n            value={password}\r\n            onChange={event => setPassword(event.target.value)}/>\r\n            \r\n            <button>Register</button>\r\n        </form>\r\n    );\r\n}"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,eAAe,SAASC,YAAYA,CAAA,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,eAAeS,QAAQA,CAACC,KAAK,EAAC;IAC1BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB;IACA,IAAG;MACH,MAAMC,KAAK,CAAC,gCAAgC,EAAC;QACzCC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACX,QAAQ;UAACE;QAAQ,CAAC,CAAC;QACzCU,OAAO,EAAE;UAAC,cAAc,EAAC;QAAkB;MACnD,CAAC,CAAC;IACN,CAAC,CACD,OAAMC,CAAC,EAAC;MACJC,KAAK,CAAC,qBAAqB,CAAC;IAChC;IACQ;IACA;IACA;IACA;IACA;IACA;IACA;EACJ;EACA,oBACIjB,OAAA;IAAMkB,SAAS,EAAC,UAAU;IAACC,QAAQ,EAAEZ,QAAS;IAAAa,QAAA,gBAC1CpB,OAAA;MAAAoB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBxB,OAAA;MAAOyB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,UAAU;MACzCC,KAAK,EAAExB,QAAS;MAChByB,QAAQ,EAAEpB,KAAK,IAAIJ,WAAW,CAACI,KAAK,CAACqB,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAErDxB,OAAA;MAAOyB,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,UAAU;MAC7CC,KAAK,EAAEtB,QAAS;MAChBuB,QAAQ,EAAEpB,KAAK,IAAIF,WAAW,CAACE,KAAK,CAACqB,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAErDxB,OAAA;MAAAoB,QAAA,EAAQ;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEf;AAACtB,EAAA,CAtCuBD,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}