{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\krish\\\\OneDrive\\\\Desktop\\\\Blogging Website\\\\client\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  async function login(event) {\n    event.preventDefault();\n    const response = await fetch('http://localhost:4000/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    });\n    if (response.ok) {\n      response.json().then(userInfo => {\n        setRedirect(true);\n      });\n    } else {\n      alert('Wrong Credentials');\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login\",\n    onSubmit: login,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      onChange: event => setUsername(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      onChange: event => setPassword(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"k8GsU9O9Xu461yaM92c9MLMzCmQ=\");\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","Navigate","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","redirect","setRedirect","login","event","preventDefault","response","fetch","method","body","JSON","stringify","headers","credentials","ok","json","then","userInfo","alert","to","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","children","type","placeholder","onChange","target","value","_c","$RefreshReg$"],"sources":["C:/Users/krish/OneDrive/Desktop/Blogging Website/client/src/pages/LoginPage.js"],"sourcesContent":["import {useState} from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nexport default function LoginPage()\r\n{\r\n    const [username,setUsername] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    const [redirect,setRedirect] = useState(false);\r\n    \r\n\r\n    async function login(event)\r\n    {\r\n        event.preventDefault();\r\n        const response = await fetch('http://localhost:4000/login',{\r\n            method: 'POST',\r\n            body: JSON.stringify({username, password}),\r\n            headers: {'Content-Type':'application/json'},\r\n            credentials: 'include',\r\n        });\r\n\r\n        if(response.ok)\r\n        {\r\n            response.json().then(userInfo =>{\r\n                setRedirect(true);\r\n            })\r\n        }\r\n        else{\r\n            alert('Wrong Credentials');\r\n        }\r\n    }\r\n\r\n    if(redirect)\r\n    {\r\n        return <Navigate to={'/'}/>\r\n    }\r\n    return(\r\n        <form className=\"login\" onSubmit={login}>\r\n            <h1>Login</h1>\r\n            <input type=\"text\" placeholder=\"username\" onChange={event =>setUsername(event.target.value)}/>\r\n            \r\n            <input type=\"password\" placeholder=\"password\" onChange={event => setPassword(event.target.value)}/>\r\n            \r\n            <button>Login</button>\r\n        </form>\r\n    );\r\n}"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,SAAQC,QAAQ,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAe,SAASC,SAASA,CAAA,EACjC;EAAAC,EAAA;EACI,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACQ,QAAQ,EAACC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACU,QAAQ,EAACC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAG9C,eAAeY,KAAKA,CAACC,KAAK,EAC1B;IACIA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAC;MACvDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACd,QAAQ;QAAEE;MAAQ,CAAC,CAAC;MAC1Ca,OAAO,EAAE;QAAC,cAAc,EAAC;MAAkB,CAAC;MAC5CC,WAAW,EAAE;IACjB,CAAC,CAAC;IAEF,IAAGP,QAAQ,CAACQ,EAAE,EACd;MACIR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAG;QAC5Bf,WAAW,CAAC,IAAI,CAAC;MACrB,CAAC,CAAC;IACN,CAAC,MACG;MACAgB,KAAK,CAAC,mBAAmB,CAAC;IAC9B;EACJ;EAEA,IAAGjB,QAAQ,EACX;IACI,oBAAOP,OAAA,CAACF,QAAQ;MAAC2B,EAAE,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAC/B;EACA,oBACI7B,OAAA;IAAM8B,SAAS,EAAC,OAAO;IAACC,QAAQ,EAAEtB,KAAM;IAAAuB,QAAA,gBACpChC,OAAA;MAAAgC,QAAA,EAAI;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACd7B,OAAA;MAAOiC,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,UAAU;MAACC,QAAQ,EAAEzB,KAAK,IAAGN,WAAW,CAACM,KAAK,CAAC0B,MAAM,CAACC,KAAK;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAE9F7B,OAAA;MAAOiC,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,UAAU;MAACC,QAAQ,EAAEzB,KAAK,IAAIJ,WAAW,CAACI,KAAK,CAAC0B,MAAM,CAACC,KAAK;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEnG7B,OAAA;MAAAgC,QAAA,EAAQ;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEf;AAAC3B,EAAA,CA1CuBD,SAAS;AAAAqC,EAAA,GAATrC,SAAS;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}